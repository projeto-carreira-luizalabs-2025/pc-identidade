version: '3.8'

services:
  mongodb:
    image: mongo:8.0
    container_name: pc-identidade-mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: bd01
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo_data:/data/db

  mongodb-cold:
    image: mongo:8.0
    container_name: pc-identidade-mongo-cold
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin_cold
      MONGO_INITDB_ROOT_PASSWORD: admin_cold
      MONGO_INITDB_DATABASE: bd01_cold
    volumes:
      - mongo_data_cold:/data/db

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5
    container_name: pc-identidade-keycloak
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: 'true'
      KC_HEALTH_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      KC_FEATURES: token-exchange
      KC_IMPORT_FILES: /opt/keycloak/data/import/marketplace-realm.json
      KC_IMPORT_STRATEGY: ignore_existing
    volumes:
      - ./devtools/keycloak-config:/opt/keycloak/data/import
    depends_on:
      - keycloak-db
    command: [ "start-dev", "--import-realm" ]
    restart: unless-stopped


  keycloak-db:
    image: postgres:13
    container_name: pc-identidade-keycloak-db
    hostname: keycloak-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    restart: unless-stopped
    # volumes:
    #   - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:4-management
    container_name: pc-identidade-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3


volumes:
  mongo_data:
  rabbitmq_data:
  mongo_data_cold: